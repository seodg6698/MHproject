<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="MHproject.mapper.FreeBoardMapper">

<resultMap id="BoardDto" type="MHproject.DTO.FreeBoardDTO">
    <result property="boardIdx" column="board_idx" />
    <result property="title" column="title" />
    <result property="contents" column="contents" />
    <result property="hitCnt" column="hit_cnt" />
    <result property="creatorId" column="creator_id" />
    <result property="createdDatetime" column="created_datetime" />
    <result property="updaterId" column="updater_id" />
    <result property="updatedDatetime" column="updated_datetime" />
    <!-- 좋아요 관련 필드 추가 -->
    <result property="likeCnt" column="like_cnt" />
    <result property="isLiked" column="is_liked" />
    
    <association property="boardDto" javaType="MHproject.DTO.FreeBoardDTO">
         <id property="boardIdx" column="board_idx" />
         <result property="title" column="title" />
         <result property="contents" column="contents" />
         <result property="hitCnt" column="hit_cnt" />
         <result property="creatorId" column="creator_id" />
         <result property="createdDatetime" column="created_datetime" />
         <result property="updaterId" column="updater_id" />
         <result property="updatedDatetime" column="updated_datetime" />
         <result property="likeCnt" column="like_cnt" />
         <result property="isLiked" column="is_liked" />
    </association>
</resultMap>

	<insert id="insertBoard" parameterType="MHproject.DTO.FreeBoardDTO">
	<![CDATA[
			INSERT INTO t_board1
				(
				title,
				contents,
				created_datetime,
				creator_id,
				like_cnt
				)
			VALUES
			(
				#{title},
				#{contents},
				NOW(),
				#{creatorId},
				0
			)
		]]>
	</insert>
	
	<update id="updateHitCount" parameterType="int">
			<![CDATA[
			UPDATE
				t_board1
			SET	
				hit_cnt = hit_cnt + 1
			WHERE
				board_idx = #{boardIdx}
		]]>
	</update>
	
	<!-- 기존 상세 조회 (좋아요 정보 없음) -->
	<select id="selectBoardDetail" parameterType="int" resultType="MHproject.DTO.FreeBoardDTO">
	<![CDATA[
		SELECT
			board_idx AS boardIdx, 
			title AS title, 
			contents AS contents, 
			hit_cnt AS hitCnt,
			created_datetime AS createdDatetime,
			creator_id AS creatorId,
			like_cnt AS likeCnt
		FROM
			t_board1
		WHERE
			board_idx = #{boardIdx} AND deleted_yn = 'N'	
		]]>
	</select>
	
	<!-- 좋아요 정보를 포함한 게시글 상세 조회 -->
	<select id="selectBoardDetailWithLike" resultType="MHproject.DTO.FreeBoardDTO">
	<![CDATA[
		SELECT
			b.board_idx AS boardIdx, 
			b.title AS title, 
			b.contents AS contents, 
			b.hit_cnt AS hitCnt,
			b.created_datetime AS createdDatetime,
			b.creator_id AS creatorId,
			b.like_cnt AS likeCnt,
			CASE 
				WHEN #{userId} IS NULL THEN false
				WHEN l.like_idx IS NOT NULL THEN true 
				ELSE false 
			END AS isLiked
		FROM
			t_board1 b
		LEFT JOIN t_board_like1 l ON b.board_idx = l.board_idx 
			AND l.user_id = #{userId}
		WHERE
			b.board_idx = #{boardIdx} 
			AND b.deleted_yn = 'N'	
		]]>
	</select>
	
	<!-- 게시글 수정 -->
    <update id="updateBoard" parameterType="MHproject.DTO.FreeBoardDTO">
        UPDATE t_board1
        SET 
            title = #{title},
            contents = #{contents},
            <!-- category = #{category}, -->
            updater_id = #{creatorId},
            updated_datetime = NOW()
        WHERE 
            board_idx = #{boardIdx}
            AND deleted_yn = 'N'
    </update>
	
	<update id="deleteBoard" parameterType="int">
		<![CDATA[
			UPDATE t_board1 SET 
				deleted_yn = "Y",
				updated_datetime = NOW(),
				updater_id = 'admin'
			WHERE
			 board_idx = #{boardIdx}		
		]]>
	</update>
	
	<!-- 게시글 이동을 위한 쿼리 -->
	<insert id="insertBoardToTargetBoard" parameterType="map">
	    <choose>
	        <when test="targetBoard == 'qna'">
	            <![CDATA[
	            INSERT INTO t_board2
	                (
	                title,
	                contents,
	                hit_cnt,
	                created_datetime,
	                creator_id,
	                updated_datetime,
	                updater_id
	                )
	            VALUES
	            (
	                #{board.title},
	                #{board.contents},
	                #{board.hitCnt},
	                #{board.createdDatetime},
	                #{board.creatorId},
	                NOW(),
	                'admin'
	            )
	            ]]>
	        </when>
	        <when test="targetBoard == 'Ex'">
	            <![CDATA[
	            INSERT INTO t_board3
	                (
	                title,
	                contents,
	                hit_cnt,
	                created_datetime,
	                creator_id,
	                updated_datetime,
	                updater_id
	                )
	            VALUES
	            (
	                #{board.title},
	                #{board.contents},
	                #{board.hitCnt},
	                #{board.createdDatetime},
	                #{board.creatorId},
	                NOW(),
	                'admin'
	            )
	            ]]>
	        </when>
	        <otherwise>
	            <![CDATA[
	            INSERT INTO t_board2
	                (
	                title,
	                contents,
	                hit_cnt,
	                created_datetime,
	                creator_id,
	                updated_datetime,
	                updater_id
	                )
	            VALUES
	            (
	                #{board.title},
	                #{board.contents},
	                #{board.hitCnt},
	                #{board.createdDatetime},
	                #{board.creatorId},
	                NOW(),
	                'admin'
	            )
	            ]]>
	        </otherwise>
	    </choose>
	</insert>
	
	<update id="selectAndDeleteBoard" parameterType="java.util.List">
		UPDATE 
			t_board1 
		SET 
			deleted_yn = "Y",
			updated_datetime = NOW(),
			updater_id = 'admin'
		WHERE 
			board_idx
		IN
		 <foreach collection="list" item="boardIdx" separator="," open="(" close=")">
			#{boardIdx}
		 </foreach>	
	</update>
		
	<!-- 기존 게시글 목록 조회 -->
	<select id="selectBoardList" resultType="hashmap" parameterType="hashmap">
    <![CDATA[
        SELECT
            board_idx AS boardIdx,
			title AS title,
			hit_cnt AS hitCnt,
			creator_id AS creatorId,
			created_datetime AS createdDatetime,
			like_cnt AS likeCnt
        FROM
            t_board1
        WHERE
            deleted_yn = 'N'
        ORDER BY board_idx DESC
        LIMIT #{pageStart}, #{perPageNum}
    ]]>
	</select>
	
	<!-- 좋아요 정보를 포함한 게시글 목록 조회 -->
	<select id="selectBoardListWithLike" resultType="hashmap">
    <![CDATA[
        SELECT
            b.board_idx AS boardIdx,
			b.title AS title,
			b.hit_cnt AS hitCnt,
			b.creator_id AS creatorId,
			b.created_datetime AS createdDatetime,
			b.like_cnt AS likeCnt,
			CASE 
				WHEN #{userId} IS NULL THEN false
				WHEN l.like_idx IS NOT NULL THEN true 
				ELSE false 
			END AS isLiked
        FROM
            t_board1 b
        LEFT JOIN t_board_like1 l ON b.board_idx = l.board_idx 
			AND l.user_id = #{userId}
        WHERE
            b.deleted_yn = 'N'
        ORDER BY b.board_idx DESC
        LIMIT #{cri.pageStart}, #{cri.perPageNum}
    ]]>
	</select>
	
	<select id="countBoardList" resultType="Integer">
    <![CDATA[
        SELECT
            count(*)
        FROM
            t_board1
        WHERE
            deleted_yn = 'N'
    ]]>
	</select>

	<!-- 기존 제목 검색 -->
	<select id="searchTitleBoardList" resultType="MHproject.DTO.FreeBoardDTO" parameterType="String">
	 <![CDATA[
		SELECT
				board_idx AS boardIdx,
				title AS title,
				hit_cnt AS hitCnt,
				creator_id AS creatorId,
				created_datetime AS createdDatetime,
				like_cnt AS likeCnt
		FROM
	            t_board1
	    WHERE
	   			title LIKE CONCAT('%', #{keyword}, '%') 
	   			AND deleted_yn = 'N'
	     ]]>
	</select>
	
	<!-- 좋아요 정보 포함한 제목 검색 -->
	<select id="searchTitleBoardListWithLike" resultType="MHproject.DTO.FreeBoardDTO">
	 <![CDATA[
		SELECT
				b.board_idx AS boardIdx,
				b.title AS title,
				b.hit_cnt AS hitCnt,
				b.creator_id AS creatorId,
				b.created_datetime AS createdDatetime,
				b.like_cnt AS likeCnt,
				CASE 
					WHEN #{userId} IS NULL THEN false
					WHEN l.like_idx IS NOT NULL THEN true 
					ELSE false 
				END AS isLiked
		FROM
	            t_board1 b
	    LEFT JOIN t_board_like1 l ON b.board_idx = l.board_idx 
			AND l.user_id = #{userId}
	    WHERE
	   			b.title LIKE CONCAT('%', #{keyword}, '%') 
	   			AND b.deleted_yn = 'N'
	     ]]>
	</select>
	
	<!-- 기존 내용 검색 -->
	<select id="searchContentsBoardList" resultType="MHproject.DTO.FreeBoardDTO" parameterType="String">
	<![CDATA[
		SELECT
				board_idx AS boardIdx,
				title AS title,
				hit_cnt AS hitCnt,
				creator_id AS creatorId,
				created_datetime AS createdDatetime,
				like_cnt AS likeCnt
		FROM
	            t_board1
	    WHERE
	    		contents  LIKE CONCAT('%', #{keyword}, '%')
	    		AND deleted_yn = 'N'      	
	  ]]>
	</select>
	
	<!-- 좋아요 정보 포함한 내용 검색 -->
	<select id="searchContentsBoardListWithLike" resultType="MHproject.DTO.FreeBoardDTO">
	<![CDATA[
		SELECT
				b.board_idx AS boardIdx,
				b.title AS title,
				b.hit_cnt AS hitCnt,
				b.creator_id AS creatorId,
				b.created_datetime AS createdDatetime,
				b.like_cnt AS likeCnt,
				CASE 
					WHEN #{userId} IS NULL THEN false
					WHEN l.like_idx IS NOT NULL THEN true 
					ELSE false 
				END AS isLiked
		FROM
	            t_board1 b
	    LEFT JOIN t_board_like1 l ON b.board_idx = l.board_idx 
			AND l.user_id = #{userId}
	    WHERE
	    		b.contents  LIKE CONCAT('%', #{keyword}, '%')
	    		AND b.deleted_yn = 'N'      	
	  ]]>
	</select>

</mapper>